## Copyright (C) 2016 Jeremiah Orians
## This file is part of stage0.
##
## stage0 is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## stage0 is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with stage0.  If not, see <http://www.gnu.org/licenses/>.

#:start
2D2B0001	# LOADUI R11 1 ; Our toggle
# ;; R14 is storing our condition code
# ;; R15 is storing our nybble

# ;; Prep TAPE_01
2D201100	# LOADUI R0 0x1100
42100000	# FOPEN_READ

# ;; Prep TAPE_02
2D201101	# LOADUI R0 0x1101
42100001	# FOPEN_WRITE

2D211100	# LOADUI R1 0x1100 ; Read from tape_01

# ;; Main program loop
# ;; Halts when done
# :loop 18
42100100	# FGETC ; Read a Char

# ;; Check for EOF
2CC00098	# JUMP.NP R0 @finish
3C000038	# JUMP @hex ; Convert it

# :loop_1 24
2CC0fff4	# JUMP.NP R0 @loop ; Don't use nonhex chars
2C9B0010	# JUMP.Z R11 @loop_2 ; Jump if toggled

# ;; Process first byte of pair
B0F0000f	# ANDI R15 R0 0xF ; Store First nibble
0D00002B	# FALSE R11 ; Flip the toggle
3C00ffe4	# JUMP @loop

# :loop_2 38
2D5F0004	# SL0I R15 4 ; Shift our first nibble
B000000f	# ANDI R0 R0 0xF ; Mask out top
0500000F	# ADD R0 R0 R15 ; Combine nibbles
2D1B0001	# LOADI R11 1 ; Flip the toggle
2D211101	# LOADUI R1 0x1101 ; Write the combined byte
42100200	# FPUTC ; To TAPE_02
2D211100	# LOADUI R1 0x1100 ; Read from tape_01
3C00ffc4	# JUMP @loop ; Try to get more bytes

# ;; Hex function
# ;; Converts Ascii chars to their hex values
# ;; Or -1 if not a hex char
# ;; Returns to whatever called it
# :hex 58
# ;; Deal with line comments starting with #
A0300023	# CMPSKIPI.NE R0 35
3C000044	# JUMP @ascii_comment
# ;; Deal with line comments starting with ;
A030003b	# CMPSKIPI.NE R0 59
3C00003c	# JUMP @ascii_comment
# ;; Deal with all ascii less than '0'
A0100030	# CMPSKIPI.GE R0 48
3C000040	# JUMP @ascii_other
# ;; Deal with '0'-'9'
A0000039	# CMPSKIPI.G R0 57
3C00001c	# JUMP @ascii_num
# ;; Unset high bit to set everything into uppercase
B00000df	# ANDI R0 R0 0xDF
# ;; Deal with all ascii less than 'A'
A0100041	# CMPSKIPI.GE R0 65
3C00002c	# JUMP @ascii_other
# ;; Deal with 'A'-'F'
A0000046	# CMPSKIPI.G R0 70
3C000010	# JUMP @ascii_high
# ;; Ignore the rest
3C000020	# JUMP @ascii_other

# :ascii_num 90
11000030	# SUBUI R0 R0 48
3C00ff90	# JUMP @loop_1
# :ascii_high 98
11000037	# SUBUI R0 R0 55
3C00ff88	# JUMP @loop_1
# :ascii_comment a0
42100100	# FGETC ; Read another char
A020000a	# CMPSKIPI.E R0 10 ; Stop at the end of line
3C00fff8	# JUMP @ascii_comment ; Otherwise keep looping
# :ascii_other ac
0D000030	# TRUE R0
3C00ff74	# JUMP @loop_1

# ;; Finish function
# ;; Cleans up at the end of the program
# ;; Performs the HALT
# :finish b4
2D201100	# LOADUI R0 0x1100 ; Close TAPE_01
42100002	# FCLOSE
2D201101	# LOADUI R0 0x1101 ; Close TAPE_02
42100002	# FCLOSE
FFFFFFFF	# HALT
